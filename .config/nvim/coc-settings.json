{
   "suggest.noselect": true,
   "suggest.virtualText": true,
   "suggest.fixInsertedWord": false,
   "suggest.removeDuplicateItems": true,
   "suggest.completionItemKindLabels": {
      "keyword": "\uf1de",
      "variable": "\ue79b",
      "value": "\uf89f",
      "operator": "\u03a8",
      "constructor": "\uf0ad",
      "function": "\u0192",
      "reference": "\ufa46",
      "constant": "\uf8fe",
      "method": "\uf09a",
      "struct": "\ufb44",
      "class": "\uf0e8",
      "interface": "\uf417",
      "text": "\ue612",
      "enum": "\uf435",
      "enumMember": "\uf02b",
      "module": "\uf40d",
      "color": "\ue22b",
      "property": "\ue624",
      "field": "\uf9be",
      "unit": "\uf475",
      "event": "\ufacd",
      "file": "\uf723",
      "folder": "\uf114",
      "snippet": "\ue60b",
      "typeParameter": "\uf728",
      "default": "\uf29c"
   },
   "links.tooltip": true,
   "diagnostic.virtualText": true,
   "diagnostic.virtualTextCurrentLineOnly": false,
   "diagnostic.virtualTextLineSeparator": " |",
   "codeLens.enable": true,
   "codeLens.position": "eol",
   "codeLens.separator": "\\-",
   "list.previewSplitRight": true,
   "coc.preferences.extensionUpdateCheck": "weekly",
   "coc.preferences.formatOnSaveFiletypes": [
      "*"
   ],
   "coc.preferences.jumpCommand": "vsplit",
   "semanticTokens.filetypes": [
      "*"
   ],
   "explorer.quitOnOpen": true,
   "explorer.keyMappings.global": {
      "<c-h>": [
         "wait",
         "gotoParent"
      ],
      "e": "open:vsplit"
   },
   "explorer.icon.enableNerdfont": true,
   "explorer.icon.source": "nvim-web-devicons",
   "explorer.buffer.showHiddenBuffers": true,
   "explorer.file.showHiddenFiles": true,
   "explorer.diagnostic.enableSubscriptNumber": true,
   "rust-analyzer.restartServerOnConfigChange": true,
   "rust-analyzer.updates.channel": "nightly",
   "rust-analyzer.inlayHints.bindingModeHints.enable": true,
   "rust-analyzer.inlayHints.closureReturnTypeHints.enable": true,
   "rust-analyzer.inlayHints.lifetimeElisionHints.enable": "always",
   "rust-analyzer.inlayHints.reborrowHints.enable": "always",
   "rust-analyzer.lens.references.adt.enable": true,
   "rust-analyzer.lens.references.enumVariant.enable": true,
   "rust-analyzer.lens.references.method.enable": true,
   "rust-analyzer.lens.references.trait.enable": true,
   "rust-analyzer.rustfmt.rangeFormatting.enable": true,
   "rust-analyzer.completion.snippets.custom": {
      "Arc::new": {
         "postfix": "arc",
         "body": "Arc::new(${receiver})",
         "requires": "std::sync::Arc",
         "description": "Put the expression into an `Arc`",
         "scope": "expr"
      },
      "Rc::new": {
         "postfix": "rc",
         "body": "Rc::new(${receiver})",
         "requires": "std::rc::Rc",
         "description": "Put the expression into an `Rc`",
         "scope": "expr"
      },
      "Box::pin": {
         "postfix": "pinbox",
         "body": "Box::pin(${receiver})",
         "requires": "std::boxed::Box",
         "description": "Put the expression into a pinned `Box`",
         "scope": "expr"
      },
      "Ok": {
         "postfix": "ok",
         "body": "Ok(${receiver})",
         "description": "Wrap the expression in a `Result::Ok`",
         "scope": "expr"
      },
      "Err": {
         "postfix": "err",
         "body": "Err(${receiver})",
         "description": "Wrap the expression in a `Result::Err`",
         "scope": "expr"
      },
      "Some": {
         "postfix": "some",
         "body": "Some(${receiver})",
         "description": "Wrap the expression in an `Option::Some`",
         "scope": "expr"
      },
      "todo_macro":{
         "postfix":"todo",
         "body":"\ntodo!(\"====================================\n[${receiver}]\n| ${2:short, concrete, logical}\n====================================\")\n",
         "description":"custom todo! snippet",
         "scope":"item"
      }
   },
   "Lua.telemetry.enable": true,
   "sumneko-lua.enableNvimLuaDev": true
}
